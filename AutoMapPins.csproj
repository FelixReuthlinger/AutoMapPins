<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{F5D7B6C6-C13D-4B48-B472-E7854E5141E0}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>AutoMapPins</RootNamespace>
        <AssemblyName>AutoMapPins</AssemblyName>
        <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>10</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <Choose>
        <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
                <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)/BepInEx</BepInExPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)')">$(GamePath)/unstripped_corelib</CorlibPath>
                <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)/valheim_Data/Managed/publicized_assemblies</PublicizedAssembliesPath>
            </PropertyGroup>
        </When>
        <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
                <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
                <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)') AND Exists('$(ValheimGamePath)')">$(ValheimGamePath)</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">D:\SteamLibrary\steamapps\common\Valheim</GamePath>
                <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)\BepInEx</BepInExPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\unstripped_corlib</CorlibPath>
                <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed\publicized_assemblies</PublicizedAssembliesPath>
            </PropertyGroup>
        </When>
    </Choose>
    <PropertyGroup Condition="'$(OS)' == 'Windows_NT' AND $(GamePath) != ''">
        <StartAction>Program</StartAction>
        <StartProgram>$(GamePath)\valheim.exe</StartProgram>
        <StartArguments>-console</StartArguments>
        <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(BepInExPath)\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(BepInExPath)\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="assembly_guiutils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim">
            <HintPath>$(PublicizedAssembliesPath)\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="ServerSync">
          <HintPath>libraries\ServerSync.dll</HintPath>
        </Reference>
        <Reference Include="System" />
        <Reference Include="System.Core" />
        <Reference Include="System.Data" />
        <Reference Include="System.Xml" />
        <Reference Include="UnityEngine">
            <HintPath>$(CorlibPath)\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(CorlibPath)\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI">
            <HintPath>$(CorlibPath)\UnityEngine.UI.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule">
            <HintPath>$(CorlibPath)\UnityEngine.ImageConversionModule.dll</HintPath>
        </Reference>
        <Reference Include="YamlDotNet">
          <HintPath>packages\YamlDotNet.13.1.1\lib\net45\YamlDotNet.dll</HintPath>
        </Reference>
        <Reference Include="YamlDotNet, Version=13.0.0.0, Culture=neutral, PublicKeyToken=ec19458f3c15af5e, processorArchitecture=MSIL">
          <HintPath>packages\YamlDotNet.13.1.1\lib\net45\YamlDotNet.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="AutoMapPinsPlugin.cs" />
        <Compile Include="FileIO\YamlFileStorage.cs" />
        <Compile Include="Icons\Assets.cs" />
        <Compile Include="Icons\Resources.Designer.cs">
          <AutoGen>True</AutoGen>
          <DesignTime>True</DesignTime>
          <DependentUpon>Resources.resx</DependentUpon>
        </Compile>
        <Compile Include="Model\CategoryConfig.cs" />
        <Compile Include="Model\Common.cs" />
        <Compile Include="Model\PinComponent.cs" />
        <Compile Include="Model\PinConfig.cs" />
        <Compile Include="Model\Registry.cs" />
        <Compile Include="Patches\CommonPatchLogic.cs" />
        <Compile Include="Patches\DestructiblePatch.cs" />
        <Compile Include="Patches\ConsolePatch.cs" />
        <Compile Include="Patches\LeviathanPatch.cs" />
        <Compile Include="Patches\LocationPatch.cs" />
        <Compile Include="Patches\LootSpawnerPatch.cs" />
        <Compile Include="Patches\MineRockPatch.cs" />
        <Compile Include="Patches\PickablePatch.cs" />
        <Compile Include="Patches\PlantPatch.cs" />
        <Compile Include="Patches\RuneStonePatch.cs" />
        <Compile Include="Patches\SapCollectorPatch.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
        <Compile Include="Util.cs" />
        <Content Include=".gitignore" />
        <Content Include="Attributions.md" />
        <Content Include="CHANGELOG.md" />
        <Content Include="Icons\binary\AxeIcon.bin" />
        <Content Include="Icons\binary\AxeIcon48.bin" />
        <Content Include="Icons\binary\BerryIcon.bin" />
        <Content Include="Icons\binary\BerryIcon48.bin" />
        <Content Include="Icons\binary\DungeonIcon.bin" />
        <Content Include="Icons\binary\DungeonIcon48.bin" />
        <Content Include="Icons\binary\FlowerIcon.bin" />
        <Content Include="Icons\binary\FlowerIcon48.bin" />
        <Content Include="Icons\binary\HandIcon.bin" />
        <Content Include="Icons\binary\HandIcon48.bin" />
        <Content Include="Icons\binary\MineIcon.bin" />
        <Content Include="Icons\binary\MineIcon48.bin" />
        <Content Include="Icons\binary\MushroomIcon.bin" />
        <Content Include="Icons\binary\MushroomIcon48.bin" />
        <Content Include="Icons\binary\SeedIcon.bin" />
        <Content Include="Icons\binary\SeedIcon48.bin" />
        <Content Include="Icons\Making Icons.md" />
        <Content Include="Icons\png\rune.png" />
        <Content Include="Icons\png\spawner.png" />
        <Content Include="ILRepack.targets" />
        <Content Include="README.md" />
        <Content Include="ThunderStorePackage\config\FixItFelix.AutoMapPins.categories.yaml" />
        <Content Include="ThunderStorePackage\icon.png" />
        <Content Include="ThunderStorePackage\manifest.json" />
      <None Include="App.config" />
      <None Include="packages.config" />
    </ItemGroup>
    <ItemGroup>
      <EmbeddedResource Include="Icons\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
        <SubType>Designer</SubType>
      </EmbeddedResource>
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <Target Name="CopyOutputDLL" AfterTargets="Build;Rebuild" Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <Error Text="DLL not found in target directory." Condition="!Exists('$(TargetDir)$(AssemblyName).dll')" />
        <Error Text="DLL not found in target directory." Condition="!Exists('$(TargetDir)$(AssemblyName).pdb')" />
        <MakeDir Directories="$(BepInExPath)\plugins\$(AssemblyName)" Condition="!Exists('$(BepInExPath)\plugins\$(AssemblyName)')" />
        <Exec Command="$(ProjectDir)libraries\debug\pdb2mdb.exe $(TargetDir)$(AssemblyName).dll" />
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(BepInExPath)\plugins\$(AssemblyName)" OverwriteReadOnlyFiles="true" />
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).pdb" DestinationFolder="$(BepInExPath)\plugins\$(AssemblyName)" OverwriteReadOnlyFiles="true" />
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll.mdb" DestinationFolder="$(BepInExPath)\plugins\$(AssemblyName)" OverwriteReadOnlyFiles="true" />
    </Target>
    <Target Name="MakeThunderStorePackage" AfterTargets="CopyOutputDLL" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <Error Text="README.md not found in project root directory." Condition="!Exists('$(ProjectDir)\README.md')" />
        <Error Text="CHANGELOG.md not found in project root directory." Condition="!Exists('$(ProjectDir)\CHANGELOG.md')" />
        <Error Text="manifest.json not found in Thunderstore directory." Condition="!Exists('$(ProjectDir)\ThunderstorePackage\manifest.json')" />
        <Error Text="icon.png not found in Thunderstore directory. Please note that Thunderstore requires this image to be 256x256 in dimension" Condition="!Exists('$(ProjectDir)\ThunderstorePackage\icon.png')" />
        <ItemGroup>
            <ConfigFiles Include="$(ProjectDir)\ThunderStorePackage\config\**\*.*" />
            <PluginsFiles Include="$(ProjectDir)\ThunderStorePackage\plugins\**\*.*" />
        </ItemGroup>
        <MakeDir Directories="$(ProjectDir)\TempPackage" />
        <Copy SourceFiles="$(TargetDir)$(AssemblyName).dll" DestinationFolder="$(ProjectDir)\TempPackage\plugins" Condition="Exists('$(TargetDir)$(AssemblyName).dll')" />
        <Copy SourceFiles="$(ProjectDir)\README.md" DestinationFolder="$(ProjectDir)\TempPackage" Condition="Exists('$(ProjectDir)\README.md')" />
        <Copy SourceFiles="$(ProjectDir)\CHANGELOG.md" DestinationFolder="$(ProjectDir)\TempPackage" Condition="Exists('$(ProjectDir)\CHANGELOG.md')" />
        <Copy SourceFiles="$(ProjectDir)\ThunderStorePackage\manifest.json" DestinationFolder="$(ProjectDir)\TempPackage" Condition="Exists('$(ProjectDir)\ThunderStorePackage\manifest.json')" />
        <Copy SourceFiles="$(ProjectDir)\ThunderStorePackage\icon.png" DestinationFolder="$(ProjectDir)\TempPackage" Condition="Exists('$(ProjectDir)\ThunderStorePackage\icon.png')" />
        <Copy SourceFiles="@(ConfigFiles)" DestinationFolder="$(ProjectDir)\TempPackage\config" />
        <Copy SourceFiles="@(PluginsFiles)" DestinationFolder="$(ProjectDir)\TempPackage\plugins" />
        <ZipDirectory SourceDirectory="$(ProjectDir)\TempPackage" DestinationFile="$(HOMEDRIVE)$(HOMEPATH)\Downloads\$(AssemblyName).zip" Overwrite="true" />
        <RemoveDir Directories="$(ProjectDir)\TempPackage" />
        <Message Text="Created ThunderStore mod zip file '$(HOMEDRIVE)$(HOMEPATH)\Downloads\$(AssemblyName).zip'" />
    </Target>
    <Import Project="packages\ILRepack.Lib.MSBuild.Task.2.0.18.2\build\ILRepack.Lib.MSBuild.Task.targets" Condition="Exists('packages\ILRepack.Lib.MSBuild.Task.2.0.18.2\build\ILRepack.Lib.MSBuild.Task.targets')" />
    <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
      <PropertyGroup>
        <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105.The missing file is {0}.</ErrorText>
      </PropertyGroup>
      <Error Condition="!Exists('packages\ILRepack.Lib.MSBuild.Task.2.0.18.2\build\ILRepack.Lib.MSBuild.Task.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\ILRepack.Lib.MSBuild.Task.2.0.18.2\build\ILRepack.Lib.MSBuild.Task.targets'))" />
    </Target>
</Project>
